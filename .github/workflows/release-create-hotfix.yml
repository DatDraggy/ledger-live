name: "[Release](Hotfix) Create Branch"
on:
  workflow_dispatch:

jobs:
  create-hotfix:
    name: Create Hotfix
    runs-on: ubuntu-24.04
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - name: generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GH_BOT_APP_ID }}
          private_key: ${{ secrets.GH_BOT_PRIVATE_KEY }}
      - uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ steps.generate-token.outputs.token }}
      - name: Setup git user
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-git-user@develop
      - name: create hotfix branch
        run: |
          git checkout -b hotfix
      - name: Setup the toolchain
        uses: LedgerHQ/ledger-live/tools/actions/composites/setup-toolchain@develop
      - name: install dependencies
        run: pnpm i -F "ledger-live"
      - name: Move minor/major updates to patch
        # For more info about why we do this, see this doc:
        # https://ledgerhq.atlassian.net/wiki/spaces/WALLETCO/pages/4710989838/LL+Incident+Recovery+-+Hotfix+in+all+cases
        run: |
          for file in .changeset/*.md; do
            if grep -q ": minor" "$file"; then
              # target the lines between the "---" yaml delimiters, replace ": minor" with ": patch"
              sed -i '/---/,/---/s/: minor/: patch/' "$file"
              echo "Updated minor update in $file to patch"
            fi
            if grep -q ": major" "$file"; then
              # replace ": major" with ": patch"
              sed -i '/---/,/---/s/: major/: patch/' "$file"
              echo "Updated major update in $file to patch"
            fi
          done
      - name: enter prerelease mode
        run: pnpm changeset pre enter hotfix
      - name: commit
        run: |
          git add .
          git commit -m "chore(hotfix) :rocket: entering hotfix mode"
      - name: Get date
        id: date
        run: |
          echo "date=$(date +%F)" >> $GITHUB_OUTPUT
      - name: push
        run: |
          git push origin hotfix
          gh pr create --title ":fire: Hotfix ${{ steps.date.outputs.date }}" -F ./.github/templates/hotfix.md --base main --head hotfix
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
